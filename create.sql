SET
    search_path TO public;

BEGIN WORK;

SET
    TRANSACTION READ WRITE;

SET
    datestyle = DMY;

CREATE TABLE Categories (
    "id" UUID NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "image" VARCHAR(255) NOT NULL,
    CONSTRAINT PK_CATEGORY PRIMARY KEY(id)
);

CREATE TABLE Users (
    "id" UUID NOT NULL,
    "firstname" VARCHAR(255) NOT NULL,
    "lastname" VARCHAR(255) NOT NULL,
    "email" VARCHAR(255) NOT NULL UNIQUE,
    "password" VARCHAR(255) NOT NULL,
    CONSTRAINT PK_USER PRIMARY KEY(id)
);

CREATE TABLE Orders (
    "id" UUID NOT NULL,
    "firstname" VARCHAR(255) NOT NULL,
    "lastname" VARCHAR(255) NOT NULL,
    "address" VARCHAR(255) NOT NULL,
    "email" VARCHAR(255) NOT NULL,
    "city" VARCHAR(255) NOT NULL,
    "postalCode" VARCHAR(255) NOT NULL,
    "country" VARCHAR(255) NOT NULL,
    "user_id" UUID NOT NULL,
    CONSTRAINT PK_ORDER PRIMARY KEY(id),
    CONSTRAINT FK_USER_ORDER FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE NO ACTION ON UPDATE CASCADE
);

CREATE TABLE Products (
    "id" UUID NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "price" DECIMAL NOT NULL,
    "image" VARCHAR(255) NOT NULL,
    "description" VARCHAR(255) NOT NULL,
    "category_id" UUID NOT NULL,
    CONSTRAINT FK_CATEGORY_PRODUCT FOREIGN KEY(category_id) REFERENCES categories(id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT PK_PRODUCT PRIMARY KEY(id)
);

CREATE TABLE OrderProducts (
    "order_id" UUID,
    "product_id" UUID,
    "quantity" smallint NOT NULL,
    CONSTRAINT PK_ORDER_PRODUCTS PRIMARY KEY (order_id, product_id),
    CONSTRAINT FK_ORDER_ORDER_PRODUCT FOREIGN KEY(order_id) REFERENCES orders(id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_ORDER_PRODUCT FOREIGN KEY(product_id) REFERENCES products(id) ON DELETE CASCADE ON UPDATE CASCADE
);

COMMIT;
